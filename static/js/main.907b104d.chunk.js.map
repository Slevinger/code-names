{"version":3,"sources":["const/config.js","apis/codeNameApi.js","components/PlayersList.js","components/ReadyPanel.js","components/TeamContainer.js","components/Board.js","components/Settings.js","components/screens/Room.js","components/Dialog.js","components/screens/LoginScreen.js","hooks/useGame.js","components/screens/MainRouter.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["PROD_PATH","instance","axios","create","baseURL","PlayersList","styled","div","Player","nickname","isReady","className","style","color","players","map","player","Container","readyToStart","css","teamColor","toggleReady","startGame","game","areAllPlayersReady","useMemo","Object","values","filter","length","isThereHinterForEachTeam","teams","teamHinterMap","keys","reduce","acc","forEach","isHinter","isThereGuesserForEachTeam","FormControlLabel","control","Switch","checked","disabled","onChange","label","onClick","console","log","StyeldTeamsContainer","BgTitle","title","chooseTeam","state","togglePlayerReady","leaveGame","currentPlayer","push","red","hinters","guessers","blue","ReadyPanel","gameId","Board","StyledCard","showColor","ColorBox","ProgressBar","flipTeam","clickCount","playersCount","backgroundColor","pcnt","Math","round","Card","indexes","card","key","word","cellSelected","board","whosTurn","numberOfWords","myTeamsTurn","countSelectedCells","nick","selectedCell","cellIndexes","Settings","Input","onValueChange","value","text","editMode","e","currentTarget","type","placeholder","setQlue","qlue","useState","currentQlue","setCurrentQlue","noOfWords","setNoOfWords","StyleRoom","hook","joinGame","createGame","name","setNickname","Dialog","target","history","createBrowserHistory","initialState","cellsMap","reducer","payload","marked","updatedGame","newGameId","socket","openSocket","connect","handleError","error","splitPath","location","pathname","split","urlId","useReducer","dispatch","useEffect","on","singupForGameChange","a","getGame","emit","get","data","role","actions","disconnect","useGame","path","Room","LoginScreen","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.907b104d.chunk.js","sourcesContent":["// export const LOCAL_IP = \"192.168.0.87\";\n// export const LOCAL_IP = \"10.0.0.12\";\nexport const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://tranquil-ocean-97712.herokuapp.com/`;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { DEV_PATH, PROD_PATH } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: PROD_PATH\n});\nexport default instance;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst PlayersList = styled.div`\n  flex: 1;\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n  .player {\n    flex-direction: row;\n    display: flex;\n    line-height: 1.4rem;\n    padding: 10px;\n  }\n  .player-name {\n    flex: 1;\n  }\n  h1 {\n    text-align: center;\n  }\n`;\n\nconst Player = ({ nickname, isReady, ...props }) => (\n  <div className=\"player\">\n    <div className=\"player-name\">{nickname}</div>\n    {isReady && <DoneIcon style={{ color: \"green\" }} />}\n  </div>\n);\n\nexport default ({ players }) => {\n  return (\n    <PlayersList>\n      <h1>Players</h1>\n      {players.map(player => (\n        <Player {...player} />\n      ))}\n    </PlayersList>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { DEFAULT_ECDH_CURVE } from \"tls\";\n\nconst Container = styled.div`\n  width: 200px;\n  height: 100px;\n  border: 1px solid;\n  flex-direction: column;\n  display: flex;\n  margin: 5px;\n  text-align: center;\n  align-items: center;\n\n  button {\n    padding: 10px;\n    font-size: 20px;\n    ${({ readyToStart }) =>\n      !readyToStart &&\n      css`\n        opacity: 0.7;\n        pointer-events: none;\n      `};\n  }\n`;\n\nexport default ({\n  teamColor,\n  isReady,\n  toggleReady,\n  startGame,\n  game,\n  ...player\n}) => {\n  const areAllPlayersReady = useMemo(() => {\n    const { players } = game;\n    debugger;\n    const ready =\n      Object.values(players).filter(player => !player.isReady).length === 0;\n    return ready;\n  }, [game.players]);\n\n  const isThereHinterForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    debugger;\n    const teamHinterMap = Object.keys(teams).reduce(\n      (acc, teamColor) => ({ ...acc, [teamColor]: false }),\n      {}\n    );\n    Object.values(players).forEach(player => {\n      if (player.teamColor && player.isHinter) {\n        teamHinterMap[player.teamColor] = true;\n      }\n    });\n    return Object.values(teamHinterMap).reduce(\n      (acc, isHinter) => acc && isHinter,\n      true\n    );\n  }, [game.players, game.teams]);\n\n  const isThereGuesserForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    return Object.keys(teams).reduce((acc, teamColor) => {\n      return acc && teams[teamColor].players.length > 0;\n    }, true);\n  }, [game.players]);\n\n  const readyToStart =\n    areAllPlayersReady && isThereGuesserForEachTeam && isThereHinterForEachTeam;\n  debugger;\n  // const canPlayerStartGame = useMemo(,[])\n  return (\n    <Container readyToStart={readyToStart}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={isReady}\n            disabled={!teamColor}\n            onChange={() => {\n              toggleReady(player.nickname);\n            }}\n          />\n        }\n        label=\"Ready\"\n      />\n      {\n        <button\n          onClick={() => {\n            console.log(\"start game\");\n            startGame && startGame();\n          }}\n        >\n          start\n        </button>\n      }\n    </Container>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport ReadyPanel from \"./ReadyPanel\";\n\nconst StyeldTeamsContainer = styled.div`\n  width: 60%;\n  height: 400px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: row;\n  div {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n  .red-team {\n    background-color: rgba(100, 0, 0, 0.5);\n  }\n  .blue-team {\n    background-color: rgba(0, 0, 100, 0.5);\n  }\n\n  .guesser {\n    flex: 2;\n    position: relative;\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.2);\n      cursor: pointer;\n    }\n  }\n  .hinter {\n    flex: 1;\n    position: relative;\n    background-color: rgba(0, 0, 0, 0.2);\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n      cursor: pointer;\n    }\n  }\n`;\n\nconst BgTitle = ({ title, ...props }) => {\n  return <div className=\"bg-title\">{title}</div>;\n};\n\nexport default ({\n  chooseTeam,\n  state,\n  togglePlayerReady,\n  startGame,\n  leaveGame\n}) => {\n  const { players, nickname } = state;\n  const currentPlayer = players[nickname];\n\n  const teams = useMemo(\n    () =>\n      Object.values(players)\n        .filter(({ teamColor }) => teamColor)\n        .reduce(\n          (acc, player) => {\n            acc[player.teamColor][\n              player.isHinter ? \"hinters\" : \"guessers\"\n            ].push(player.nickname);\n            return acc;\n          },\n          {\n            red: { hinters: [], guessers: [] },\n            blue: { hinters: [], guessers: [] }\n          }\n        ),\n    [players]\n  );\n  return (\n    <div className=\"room-content\">\n      <StyeldTeamsContainer>\n        <div className=\"blue-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.blue.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.blue.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n        <div className=\"red-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"red\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.red.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"red\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.red.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n      </StyeldTeamsContainer>\n      <ReadyPanel\n        {...currentPlayer}\n        game={state}\n        toggleReady={togglePlayerReady}\n        startGame={startGame}\n      />\n      <button\n        onClick={() => {\n          leaveGame(state.gameId);\n        }}\n      >\n        logout\n      </button>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Board = styled.div`\n  display: block;\n  width: 1200px;\n  height: 550px;\n  flex-wrap: wrap;\n  flex-direction: row;\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledCard = styled.div`\n  background-color: ${({ showColor, color }) =>\n    showColor ? color : \"rgba(0,0,0,0.2)\"};\n  width: 200px;\n  height: 100px;\n  border-radius: 14px;\n  border: solid thin;\n  flex-direction: column;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ disabled }) => {\n    return (\n      disabled &&\n      css`\n        pointer-events: hover;\n      `\n    );\n  }}\n  &:hover {\n    cursor: pointer;\n    background-color: lightgrey;\n  }\n`;\n\nconst ColorBox = styled.div`\n  position: relative;\n  width: 60%;\n  height: 25px;\n  background-color: white;\n  border: 1px solid;\n  .word {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: relative;\n  height: 100%;\n  ${({ teamColor, flipTeam, clickCount, playersCount }) => {\n    let backgroundColor = \"white\";\n    let pcnt = 100;\n    if (flipTeam) {\n      backgroundColor = flipTeam;\n    } else {\n      if (clickCount > 0) {\n        backgroundColor = teamColor;\n        pcnt = Math.round((clickCount / playersCount) * 100);\n      }\n    }\n    return css`\n      background-color: ${backgroundColor};\n      width: ${pcnt}%;\n    `;\n  }}\n`;\n\nconst Card = ({ indexes, onClick, teamColor, ...card }) => {\n  return (\n    <StyledCard key={indexes} {...card} onClick={onClick}>\n      <ColorBox {...card}>\n        <div className={\"word\"}>{card.word}</div>\n        <ProgressBar teamColor={teamColor} {...card} />\n      </ColorBox>\n    </StyledCard>\n  );\n};\n\nexport default ({ state, cellSelected }) => {\n  const { board, whosTurn, teams, players, numberOfWords, player } = state;\n  if (!player || !player.nickname) {\n    return null;\n  }\n  const myTeamsTurn = whosTurn === player.teamColor;\n  const countSelectedCells = teams[state.whosTurn].players\n    .filter(nick => players[nick])\n    .map(nick => players[nick].selectedCell)\n    .reduce(\n      (acc, cellIndexes) => ({\n        ...acc,\n        [cellIndexes]: (acc[cellIndexes] || 0) + 1\n      }),\n      {}\n    );\n\n  return (\n    <div className=\"room-content\">\n      {Object.keys(state.players).length > 0 && (\n        <Board>\n          {Object.keys(board).map(key => {\n            const player = state.players[state.nickname];\n            const showColor = player.isHinter || board[key].showColor;\n            return (\n              <Card\n                indexes={key}\n                disabled={!numberOfWords && !myTeamsTurn}\n                clickCount={countSelectedCells[key] || 0}\n                playersCount={teams[state.whosTurn].players.length}\n                teamColor={whosTurn}\n                onClick={() => {\n                  debugger;\n                  whosTurn === player.teamColor && cellSelected(key);\n                }}\n                {...board[key]}\n                {...{ showColor }}\n              />\n            );\n          })}\n        </Board>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nconst Settings = styled.div`\n  text-align: center;\n  flex: 1;\n  padding-top: 10px;\n  border-left: 1px solid rgba(0, 0, 0, 0.2);\n\n  .settings-item {\n    font-size: 19px;\n  }\n  .qlue {\n    padding: 5px;\n    font-size: 18px;\n  }\n`;\nconst Input = ({ onValueChange, value, text, editMode }) => {\n  return editMode ? (\n    <input\n      value={value}\n      onChange={e => {\n        onValueChange(e.currentTarget.value);\n      }}\n      type=\"text\"\n      className=\"qlue\"\n      placeholder=\"Qlue\"\n    />\n  ) : (\n    <h2>{text}</h2>\n  );\n};\n\nconst NumberOfWords = ({ player: { isHinter }, numberOfWords }) => {\n  debugger;\n  return isHinter && !numberOfWords ? (\n    <input type=\"text\" className=\"qlue\" placeholder=\"Word Count\" />\n  ) : (\n    <h2>{numberOfWords}</h2>\n  );\n};\n\nexport default ({ state, setQlue }) => {\n  const { whosTurn, player, numberOfWords, qlue } = state;\n  const [currentQlue, setCurrentQlue] = useState(\"\");\n  const [noOfWords, setNoOfWords] = useState(0);\n  const editMode = useMemo(() => {\n    if (player && player.teamColor) {\n      return player.isHinter && whosTurn === player.teamColor && !numberOfWords;\n    }\n  }, [whosTurn, player, numberOfWords]);\n  return (\n    <Settings>\n      <div>\n        <div className=\"settings-item\">\n          Go <span style={{ color: whosTurn }}>{whosTurn}</span> team\n        </div>\n      </div>\n\n      {player && (\n        <Input\n          editMode={editMode}\n          text={qlue}\n          value={currentQlue}\n          onValueChange={setCurrentQlue}\n          {...state}\n        />\n      )}\n      {player && (\n        <Input\n          editMode={editMode}\n          text={numberOfWords}\n          value={noOfWords}\n          onValueChange={setNoOfWords}\n          {...state}\n        />\n      )}\n      {!numberOfWords && editMode && (\n        <button\n          onClick={() => {\n            setQlue(currentQlue, noOfWords);\n          }}\n        >\n          submit\n        </button>\n      )}\n    </Settings>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PlayersList from \"../PlayersList\";\nimport TeamsContainer from \"../TeamContainer\";\nimport Board from \"../Board\";\nimport Settings from \"../Settings\";\n\nconst StyleRoom = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  background-color: ${({ teamColor }) =>\n    teamColor && teamColor === \"red\"\n      ? \"rgba(200,0,0,0.2)\"\n      : teamColor && teamColor === \"blue\"\n      ? \"rgba(0,0,200,0.2)\"\n      : \"none\"};\n  .room-content {\n    align-items: center;\n    flex: 5;\n    display: flex;\n    flex-direction: column;\n    .game-title {\n      font-size: 29px;\n      width: 100%;\n      padding-left: 60px;\n      flex-direction: row;\n      display: flex;\n      padding-top: 10px;\n      .qlue {\n        padding: 5px;\n        font-size: 18px;\n      }\n    }\n  }\n`;\n\nexport default hook => {\n  const { state } = hook;\n  const { players = [], board, player } = state;\n\n  return (\n    <StyleRoom {...player}>\n      <PlayersList players={Object.values(players)} />\n      {board ? <Board {...hook} /> : <TeamsContainer {...hook} />}\n      <Settings {...hook} />\n    </StyleRoom>\n  );\n};\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  input {\n    padding: 10px;\n    font-size: 22px;\n  }\n  .select-method-buttons {\n    justify-content: space-around;\n    display: flex;\n    button {\n      font-size: 20px;\n      padding: 4px;\n      margin-top: 5px;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport Dialog from \"../Dialog\";\n\nexport default ({\n  joinGame,\n  createGame,\n  state: { gameId, nickname: name }\n}) => {\n  const [nickname, setNickname] = useState(name);\n\n  return (\n    <Dialog>\n      <div>\n        <div className=\"label\">Nick Name</div>\n        <input\n          type=\"text\"\n          placeholder=\"Select Nickname\"\n          value={nickname}\n          onChange={e => {\n            setNickname(e.target.value);\n          }}\n        />\n        <div className=\"select-method-buttons\">\n          <button\n            onClick={() => {\n              nickname && createGame(nickname);\n            }}\n          >\n            CREATE\n          </button>\n          <button\n            onClick={() => {\n              nickname && joinGame(gameId, nickname);\n            }}\n          >\n            JOIN\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n","import { useState, useReducer, useEffect } from \"react\";\nimport axios from \"../apis/codeNameApi\";\nimport openSocket from \"socket.io-client\";\nimport { PROD_PATH, DEV_PATH } from \"../const/config\";\n\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nconst initialState = {\n  cellsMap: {}\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"selectCard\":\n      const { cellIndexes } = payload;\n      return {\n        ...state,\n        [cellIndexes]: { ...state[cellIndexes], marked: true }\n      };\n    case \"gameUpdate\":\n      const { nickname = \"\", game: updatedGame } = payload;\n      const player = updatedGame.players[nickname];\n      return {\n        ...state,\n        ...updatedGame,\n        player\n      };\n    case \"setGame\":\n      const { game } = payload || { game: initialState };\n      return { ...state, ...game };\n    case \"createGame\":\n      const { newGameId } = payload;\n      return { ...initialState, gameId: newGameId };\n    default:\n      return state;\n  }\n};\nconst socket = openSocket(PROD_PATH);\nsocket.connect();\n\nconst singupForGameChange = (dispatch, nickname) => {\n  socket.on(\"gameChange\", game => {\n    console.log(\"game\", game);\n    history.push(`/games/${game.gameId}`);\n    debugger;\n    dispatch({ type: \"gameUpdate\", payload: { game, nickname } });\n  });\n};\n\nconst handleError = error => console.log(error);\n\nexport default () => {\n  const splitPath = history.location.pathname.split(\"/\");\n  const urlId = splitPath[splitPath.length - 1];\n\n  const [state, dispatch] = useReducer(reducer, { ...initialState });\n  const [nickname, setNickname] = useState(null);\n\n  useEffect(() => {\n    if (nickname) {\n      singupForGameChange(dispatch, nickname);\n    }\n    (async (urlId, gameId) => {\n      if (urlId != \"games\" && gameId !== urlId) {\n        getGame(urlId);\n      }\n    })(urlId, state.gameId);\n  }, [urlId, state.gameId, nickname]);\n\n  const createGame = async nickname => {\n    setNickname(nickname);\n    socket.emit(\"createGame\", { nickname }, handleError);\n  };\n\n  const startGame = () => {\n    socket.emit(\"startGame\", { gameId: state.gameId }, handleError);\n  };\n\n  const getGame = async gameId => {\n    const { data: game } = await axios.get(`/games/${gameId}`);\n    dispatch({ type: \"setGame\", payload: { game } });\n  };\n\n  const setQlue = (qlue, numberOfWords) => {\n    const { gameId } = state;\n    debugger;\n    socket.emit(\"setQlue\", { qlue, numberOfWords, gameId });\n  };\n\n  const togglePlayerReady = nickname => {\n    const { gameId } = state;\n    socket.emit(\"togglePlayerReady\", { gameId, nickname });\n  };\n\n  const chooseTeam = async (teamColor, role = \"guesser\") => {\n    const { gameId } = state;\n    socket.emit(\"chooseTeam\", { gameId, nickname, teamColor, role });\n  };\n\n  const leaveGame = () => {\n    setNickname(\"\");\n    socket.disconnect();\n    // localStorage.removeItem(`nickname-${gameId}`);\n\n    // socket.emit(\"leaveGame\", { nickname: state.nickname, gameId });\n    // axios.post(`/games/leave/${gameId}/${state.nickname}`);\n  };\n\n  const joinGame = async (gameId, nickname) => {\n    await setNickname(nickname);\n    socket.emit(\"joinGame\", { nickname, gameId }, handleError);\n  };\n\n  const cellSelected = async cellIndexes => {\n    socket.emit(\"cellSelected\", {\n      gameId: state.gameId,\n      nickname,\n      cellIndexes\n    });\n    // dispatch({ action: \"cellSelected\", payload: { cellIndexes } });\n  };\n\n  const actions = {\n    setQlue,\n    getGame,\n    joinGame,\n    chooseTeam,\n    leaveGame,\n    createGame,\n    startGame,\n    cellSelected,\n    togglePlayerReady\n  };\n\n  return {\n    state: { ...state, nickname },\n    history,\n    ...actions\n  };\n};\n","import React, { useEffect } from \"react\";\nimport axios from \"../../apis/codeNameApi\";\nimport Room from \"./Room\";\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PrivateRoute from \"../navigation/PrivateRoute\";\nimport LoginScreen from \"./LoginScreen\";\nimport useGame from \"../../hooks/useGame\";\n\nexport default () => {\n  const hook = useGame();\n  const {\n    history,\n    state: { nickname, gameId }\n  } = hook;\n  useEffect(() => {\n    if (gameId) {\n      history.push(`/games/${gameId}`);\n    }\n  }, [gameId]);\n\n  console.log(hook.state);\n\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/games\">\n          {gameId && nickname ? <Room {...hook} /> : <LoginScreen {...hook} />}\n        </Route>\n        <Route path=\"/code-names\">\n          <LoginScreen {...hook} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport axios from \"./apis/codeNameApi\";\nimport \"./App.css\";\nimport MainScreen from \"./components/screens/MainRouter\";\n\nfunction App() {\n  return <MainScreen />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}