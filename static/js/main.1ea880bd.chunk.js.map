{"version":3,"sources":["const/config.js","apis/codeNameApi.js","components/Player.js","components/PlayersList.js","components/common/StyledComponents.js","components/ReadyPanel.js","components/TeamContainer.js","components/Card.js","components/Board.js","services/socket.js","components/Chat.js","components/TeamScore.js","components/Settings.js","components/screens/Room.js","components/Dialog.js","components/screens/LoginScreen.js","hooks/useGame.js","const/utils.js","components/screens/MainRouter.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["url","instance","axios","create","baseURL","board","nickname","isReady","selectedCell","teamColor","className","style","color","word","PlayersList","styled","div","players","map","player","Player","Button","bgColor","disabled","css","Container","toggleReady","startGame","game","areAllPlayersReady","useMemo","Object","values","filter","length","readyToStart","teams","teamHinterMap","keys","reduce","acc","forEach","isHinter","FormControlLabel","control","Switch","checked","onChange","label","onClick","console","log","StyeldTeamsContainer","BgTitle","title","chooseTeam","state","togglePlayerReady","currentPlayer","push","red","hinters","guessers","blue","ReadyPanel","StyledCard","showColor","ColorBox","ProgressBar","flipTeam","clickCount","playersCount","backgroundColor","pcnt","Math","round","indexes","card","key","Board","cellSelected","whosTurn","numberOfWords","myTeamsTurn","countSelectedCells","nick","cellIndexes","Card","socket","openSocket","connect","Chat","english","Message","test","messagesReducer","type","payload","message","gameId","useReducer","messages","dispatch","useState","setMessage","subscribedForMessages","setSubscribedForMessages","bottomRef","useRef","useEffect","on","current","scrollIntoView","behavior","sendMessage","useCallback","e","emit","error","preventDefault","ref","value","target","focus","class","Continer","TeamColor","score","toUpperCase","Settings","Input","onValueChange","text","editMode","placeholder","currentTarget","setClue","leaveGame","clue","currentClue","setCurrentClue","noOfWords","setNoOfWords","display","flexDirection","TeamScore","StyleRoom","hook","joinGame","createGame","name","setNickname","Dialog","history","createBrowserHistory","initialState","cellsMap","reducer","marked","updatedGame","newGameId","handleError","gameUrlId","location","search","replace","split","str","pair","singupForGameChange","urlId","a","getGame","get","data","role","actions","disconnect","useGame","Room","LoginScreen","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.1ea880bd.chunk.js","sourcesContent":["// export const LOCAL_IP = \"192.168.0.87\";\n// export const LOCAL_IP = \"10.0.0.12\";\nexport const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://tranquil-ocean-97712.herokuapp.com/`;\n\nexport const url = PROD_PATH;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { url } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: url\n});\nexport default instance;\n","import React from \"react\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n/*\nprops = > {\n \"nickname\": \"slevinger\",\n \"isReady\": false,\n \"selectedCell\": false,\n \"isHinter\": true,\n \"teamColor\": \"blue\"\n}\n*/\n\nexport default ({\n  board,\n  nickname,\n  isReady,\n  selectedCell,\n  teamColor,\n  ...props\n}) => {\n  return (\n    <div className=\"player\">\n      <FiberManualRecordIcon style={{ color: teamColor }} />\n      <div className=\"player-name\">{nickname}</div>\n      <div className=\"player-name\">{`${\n        board[selectedCell] ? `[${board[selectedCell].word}]` : \"\"\n      }`}</div>\n      {isReady && <DoneIcon style={{ color: \"green\" }} />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"./Player\";\n\nconst PlayersList = styled.div`\n  flex: 1;\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n  width: 100%;\n  @media (min-width: 480px) {\n    max-width: 300px;\n  }\n  .player {\n    flex-direction: row;\n    display: flex;\n    line-height: 1.4rem;\n    padding: 10px;\n  }\n  .player-name {\n    flex: 1;\n    margin-left: 10px;\n    line-height: 24px;\n  }\n  h1 {\n    text-align: center;\n  }\n`;\n\nexport default ({ players, board = {} }) => {\n  return (\n    <PlayersList>\n      <h1>Players</h1>\n      {players.map(player => (\n        <Player {...player} board={board} />\n      ))}\n    </PlayersList>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Button = styled.div`\n  height: 30px;\n  background-color: ${({ bgColor }) => bgColor || \"#2f78b9\"};\n  border: solid thin;\n  color: ${({ color }) => color || \"white\"};\n  padding: 5px 20px;\n  display: inline-flex;\n  align-items: center;\n  border: none;\n  margin: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 7px;\n  box-shadow: 1px 2px 5px black;\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      opacity: 0.7;\n      pointer-events: none;\n    `};\n  ${({ style }) =>\n    css`\n      ${style}\n    `}\n  &:hover {\n    cursor: pointer;\n    transform: translateY(-4px);\n    box-shadow: 1px 2px 9px black;\n  }\n`;\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Button } from \"./common/StyledComponents\";\n\nconst Container = styled.div`\n  width: 200px;\n  height: 100px;\n  border: 1px solid;\n  flex-direction: column;\n  display: flex;\n  margin: 5px;\n  text-align: center;\n  align-items: center;\n\n  button {\n    padding: 10px;\n    font-size: 20px;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport default ({\n  teamColor,\n  isReady,\n  toggleReady,\n  startGame,\n  game,\n  ...player\n}) => {\n  const areAllPlayersReady = useMemo(() => {\n    const { players } = game;\n\n    const ready =\n      Object.values(players).filter(player => !player.isReady).length === 0;\n    return ready;\n  }, [game.players]);\n\n  const isThereHinterForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n\n    const teamHinterMap = Object.keys(teams).reduce(\n      (acc, teamColor) => ({ ...acc, [teamColor]: false }),\n      {}\n    );\n    Object.values(players).forEach(player => {\n      if (player.teamColor && player.isHinter) {\n        teamHinterMap[player.teamColor] = true;\n      }\n    });\n    return Object.values(teamHinterMap).reduce(\n      (acc, isHinter) => acc && isHinter,\n      true\n    );\n  }, [game.players, game.teams]);\n\n  const isThereGuesserForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    return Object.keys(teams).reduce((acc, teamColor) => {\n      return acc && teams[teamColor].players.length > 0;\n    }, true);\n  }, [game.players]);\n\n  const readyToStart = areAllPlayersReady; // && isThereGuesserForEachTeam && isThereHinterForEachTeam;\n\n  // const canPlayerStartGame = useMemo(,[])\n  return (\n    <Container>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={isReady}\n            disabled={!teamColor}\n            onChange={() => {\n              toggleReady(player.nickname);\n            }}\n          />\n        }\n        label=\"Ready\"\n      />\n      {\n        <Button\n          disabled={!readyToStart}\n          onClick={() => {\n            if (readyToStart) {\n              console.log(\"start game\");\n              startGame && startGame();\n            }\n          }}\n        >\n          start\n        </Button>\n      }\n    </Container>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport ReadyPanel from \"./ReadyPanel\";\n\nconst StyeldTeamsContainer = styled.div`\n  width: 60%;\n  height: 400px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: row;\n  div {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n  .red-team {\n    background-color: rgba(100, 0, 0, 0.5);\n  }\n  .blue-team {\n    background-color: rgba(0, 0, 100, 0.5);\n  }\n\n  .guesser {\n    flex: 2;\n    position: relative;\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.2);\n      cursor: pointer;\n    }\n  }\n  .hinter {\n    flex: 1;\n    position: relative;\n    background-color: rgba(0, 0, 0, 0.2);\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n      cursor: pointer;\n    }\n  }\n`;\n\nconst BgTitle = ({ title, ...props }) => {\n  return <div className=\"bg-title\">{title}</div>;\n};\n\nexport default ({ chooseTeam, state, togglePlayerReady, startGame }) => {\n  const { players, nickname } = state;\n  const currentPlayer = players[nickname];\n\n  const teams = useMemo(\n    () =>\n      Object.values(players)\n        .filter(({ teamColor }) => teamColor)\n        .reduce(\n          (acc, player) => {\n            acc[player.teamColor][\n              player.isHinter ? \"hinters\" : \"guessers\"\n            ].push(player.nickname);\n            return acc;\n          },\n          {\n            red: { hinters: [], guessers: [] },\n            blue: { hinters: [], guessers: [] }\n          }\n        ),\n    [players]\n  );\n  return (\n    <>\n      <StyeldTeamsContainer>\n        <div className=\"blue-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.blue.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.blue.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n        <div className=\"red-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"red\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.red.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"red\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.red.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n      </StyeldTeamsContainer>\n      <ReadyPanel\n        {...currentPlayer}\n        game={state}\n        toggleReady={togglePlayerReady}\n        startGame={startGame}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst StyledCard = styled.div`\n  background-color: ${({ showColor, color }) =>\n    showColor ? color : \"rgba(0,0,0,0.2)\"};\n  width: 17%;\n  height: 80px;\n  border-radius: 14px;\n  border: solid thin;\n  flex-direction: column;\n  font-size: 1vw;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 720px) {\n    font-size: 3vw;\n  }\n  ${({ disabled }) => {\n    return (\n      disabled &&\n      css`\n        pointer-events: hover;\n      `\n    );\n  }}\n  &:hover {\n    cursor: pointer;\n    background-color: lightgrey;\n  }\n`;\n\nconst ColorBox = styled.div`\n  position: relative;\n  width: 80%;\n  height: 25px;\n  background-color: white;\n  border: 1px solid;\n  .word {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: relative;\n  height: 100%;\n  ${({ teamColor, flipTeam, clickCount, playersCount }) => {\n    let backgroundColor = \"white\";\n    let pcnt = 100;\n    if (flipTeam) {\n      backgroundColor = flipTeam;\n    } else {\n      if (clickCount > 0) {\n        backgroundColor = teamColor;\n        pcnt = Math.round((clickCount / playersCount) * 100);\n      }\n    }\n    return css`\n      background-color: ${backgroundColor};\n      width: ${pcnt}%;\n    `;\n  }}\n`;\n\nexport default ({ indexes, onClick, teamColor, word, ...card }) => {\n  return (\n    <StyledCard key={indexes} {...card} onClick={onClick}>\n      <ColorBox {...card}>\n        <div className={\"word\"}>{word}</div>\n        <ProgressBar teamColor={teamColor} {...card} />\n      </ColorBox>\n    </StyledCard>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Card from \"./Card\";\n\nconst Board = styled.div`\n  display: block;\n  @media (min-width: 920px) {\n    min-width: 900px;\n  }\n  flex-wrap: wrap;\n  flex-direction: row;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default ({ state, cellSelected }) => {\n  const { board, whosTurn, teams, players, numberOfWords, player } = state;\n  if (!player || !player.nickname) {\n    return null;\n  }\n  const myTeamsTurn = whosTurn === player.teamColor;\n  const countSelectedCells = teams[state.whosTurn].players\n    .filter(nick => players[nick])\n    .map(nick => players[nick].selectedCell)\n    .reduce(\n      (acc, cellIndexes) => ({\n        ...acc,\n        [cellIndexes]: (acc[cellIndexes] || 0) + 1\n      }),\n      {}\n    );\n\n  return (\n    <div className=\"room-content\">\n      {Object.keys(state.players).length > 0 && (\n        <Board>\n          {Object.keys(board).map(key => {\n            const player = state.players[state.nickname];\n            const showColor = player.isHinter || board[key].showColor;\n            return (\n              <Card\n                indexes={key}\n                disabled={!numberOfWords && !myTeamsTurn}\n                clickCount={countSelectedCells[key] || 0}\n                playersCount={teams[state.whosTurn].players.length}\n                teamColor={whosTurn}\n                onClick={() => {\n                  whosTurn === player.teamColor && cellSelected(key);\n                }}\n                {...board[key]}\n                {...{ showColor }}\n              />\n            );\n          })}\n        </Board>\n      )}\n    </div>\n  );\n};\n","import openSocket from \"socket.io-client\";\nimport { url } from \"../const/config\";\n\nexport const socket = openSocket(url);\nsocket.connect();\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n  useRef,\n  useReducer\n} from \"react\";\nimport { socket } from \"../services/socket\";\nimport styled from \"styled-components\";\n\nconst Chat = styled.div`\n  width: 80%;\n  max-height: 300px;\n  height: 300px;\n  overflow-y: hidden;\n  margin: 10px;\n  border-style: inset;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n\n  .messages {\n    flex: 1;\n    overflow-y: scroll;\n  }\n  input {\n    flex: 1;\n    padding: 5px;\n  }\n  form {\n    width: 100%;\n\n    flex-direction: row;\n    position: relative;\n    display: flex;\n    font-size: 15px;\n  }\n  .send-btn {\n    color: white;\n    background-color: blue;\n    padding: 5px;\n  }\n`;\nconst english = /^[A-Za-z0-9 ]*$/;\n\nconst Message = styled.div`\n  padding: 5px;\n\n  text-align: ${({ nickname }) => (english.test(nickname) ? \"left\" : \"right\")};\n`;\n\nconst messages = [];\n\nconst messagesReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"add_message\":\n      const { nickname, message } = payload;\n      return [...state, { nickname, message }];\n    default:\n      return state;\n  }\n};\n\nexport default ({ nickname, gameId }) => {\n  const [messages, dispatch] = useReducer(messagesReducer, []);\n  const [message, setMessage] = useState(\"\");\n  const [subscribedForMessages, setSubscribedForMessages] = useState(false);\n  const bottomRef = useRef(null);\n\n  useEffect(() => {\n    if (!subscribedForMessages) {\n      socket.on(\"message\", ({ nickname, message }) => {\n        dispatch({ type: \"add_message\", payload: { nickname, message } });\n        // setMessages([...messages]);\n      });\n      setSubscribedForMessages(true);\n    }\n  }, [dispatch, messages]);\n\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = useCallback(\n    e => {\n      socket.emit(\"sendMessage\", { nickname, message, gameId }, error => {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(\"messege sent\");\n        }\n      });\n      setMessage(\"\");\n      e.preventDefault();\n    },\n    [message, nickname, gameId]\n  );\n\n  return (\n    <Chat>\n      <div className=\"messages\">\n        {messages.map(({ nickname, message }) => (\n          <Message\n            nickname={nickname}\n            key={nickname + message}\n          >{`${nickname} : ${message}`}</Message>\n        ))}\n        <div ref={bottomRef} />\n      </div>\n      <div>\n        <form className=\"messages-text\">\n          <input\n            value={message}\n            type=\"text\"\n            onChange={e => {\n              e.target.focus();\n              setMessage(e.target.value);\n            }}\n          />\n          <button onClick={sendMessage} class=\"send-btn\">\n            SEND\n          </button>\n        </form>\n      </div>\n    </Chat>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Continer = styled.div`\n  flex-direction: column;\n  display: flex;\n  border: 1px gray dashed;\n`;\n\nconst TeamColor = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 10px;\n  font-size: 32px;\n  font-weight: 600;\n  color: ${({ teamColor }) => teamColor};\n`;\n\nexport default ({ teamColor, score }) => {\n  return (\n    <Continer>\n      <TeamColor teamColor={teamColor}>{teamColor.toUpperCase()}</TeamColor>\n      <TeamColor>{score}</TeamColor>\n    </Continer>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./common/StyledComponents\";\nimport Chat from \"./Chat\";\nimport TeamScore from \"./TeamScore\";\n\nconst Settings = styled.div`\n  text-align: center;\n  flex: 2;\n  padding-top: 10px;\n  border-left: 1px solid rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .settings-item {\n    font-size: 19px;\n  }\n\n  input {\n    padding: 5px;\n    font-size: 18px;\n    margin: 5px;\n  }\n`;\nconst Input = ({ onValueChange, value, text, editMode, placeholder }) => {\n  return editMode ? (\n    <input\n      value={value}\n      onChange={e => {\n        onValueChange(e.currentTarget.value);\n      }}\n      type=\"text\"\n      placeholder={placeholder}\n    />\n  ) : (\n    <h2>{text}</h2>\n  );\n};\n\nexport default ({ state, setClue, chooseTeam, leaveGame }) => {\n  const { whosTurn, player, numberOfWords, clue, teams } = state;\n  const [currentClue, setCurrentClue] = useState(\"\");\n  const [noOfWords, setNoOfWords] = useState(\"\");\n  const editMode = useMemo(() => {\n    if (player && player.teamColor) {\n      return player.isHinter && whosTurn === player.teamColor && !numberOfWords;\n    }\n  }, [whosTurn, player, numberOfWords]);\n  return (\n    <Settings>\n      <div>\n        <div className=\"settings-item\">\n          Go <span style={{ color: whosTurn }}>{whosTurn}</span> team\n        </div>\n      </div>\n\n      <div>\n        <Button\n          onClick={() => {\n            chooseTeam(\"red\", player.isHinter ? \"hinter\" : \"guesser\");\n          }}\n          bgColor={\"rgba(244,100,100,0.4)\"}\n        >\n          Join Red Team\n        </Button>\n        <Button\n          onClick={() => {\n            chooseTeam(\"blue\", player.isHinter ? \"hinter\" : \"guesser\");\n          }}\n          bgColor={\"rgba(100,100,244,0.4)\"}\n        >\n          Join Blue Team\n        </Button>\n      </div>\n\n      {player && (\n        <Input\n          editMode={editMode}\n          text={clue}\n          value={currentClue}\n          onValueChange={setCurrentClue}\n          placeholder={\"Clue\"}\n          {...state}\n        />\n      )}\n      {player && (\n        <Input\n          editMode={editMode}\n          text={numberOfWords}\n          value={noOfWords}\n          onValueChange={setNoOfWords}\n          placeholder={\"No Of Words\"}\n          {...state}\n        />\n      )}\n      {!numberOfWords && editMode && (\n        <Button\n          onClick={() => {\n            setClue(currentClue, noOfWords);\n            setCurrentClue(\"\");\n            setNoOfWords(\"\");\n          }}\n        >\n          submit\n        </Button>\n      )}\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {Object.keys(teams).map(teamColor => (\n          <TeamScore teamColor={teamColor} score={teams[teamColor].score} />\n        ))}\n      </div>\n      <Chat nickname={state.nickname} gameId={state.gameId} />\n      <Button\n        onClick={() => {\n          leaveGame();\n        }}\n      >\n        logout\n      </Button>\n    </Settings>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PlayersList from \"../PlayersList\";\nimport TeamsContainer from \"../TeamContainer\";\nimport Board from \"../Board\";\nimport Settings from \"../Settings\";\nimport Chat from \"../Chat\";\n\nconst StyleRoom = styled.div`\n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n\n  display: flex;\n  height: 100%;\n  width: 100%;\n  background-color: ${({ teamColor }) =>\n    teamColor && teamColor === \"red\"\n      ? \"rgba(200,0,0,0.2)\"\n      : teamColor && teamColor === \"blue\"\n      ? \"rgba(0,0,200,0.2)\"\n      : \"none\"};\n  .room-content {\n    align-items: center;\n    flex: 5;\n    display: flex;\n    flex-direction: column;\n    .game-title {\n      font-size: 29px;\n      width: 100%;\n      padding-left: 60px;\n      flex-direction: row;\n      display: flex;\n      padding-top: 10px;\n    }\n  }\n`;\n\nexport default hook => {\n  const { state } = hook;\n  const { players = [], board, player } = state;\n\n  return (\n    <StyleRoom {...player}>\n      <PlayersList players={Object.values(players)} board={board} />\n      <div className=\"room-content\">\n        {board ? <Board {...hook} /> : <TeamsContainer {...hook} />}\n      </div>\n      <Settings {...hook} />\n    </StyleRoom>\n  );\n};\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  input {\n    padding: 10px;\n    font-size: 22px;\n  }\n  .select-method-buttons {\n    justify-content: space-around;\n    display: flex;\n  }\n`;\n","import React, { useState } from \"react\";\nimport Dialog from \"../Dialog\";\nimport { Button } from \"../common/StyledComponents\";\n\nexport default ({\n  joinGame,\n  createGame,\n  state: { gameId, nickname: name }\n}) => {\n  const [nickname, setNickname] = useState(name);\n\n  return (\n    <Dialog>\n      <div>\n        <div className=\"label\">Nick Name</div>\n        <input\n          type=\"text\"\n          placeholder=\"Select Nickname\"\n          value={nickname}\n          onChange={e => {\n            setNickname(e.target.value);\n          }}\n        />\n        <div className=\"select-method-buttons\">\n          <Button\n            onClick={() => {\n              nickname && createGame(nickname);\n            }}\n          >\n            CREATE\n          </Button>\n          <Button\n            onClick={() => {\n              nickname && joinGame(gameId, nickname);\n            }}\n          >\n            JOIN\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n","import { useState, useReducer, useEffect } from \"react\";\nimport axios from \"../apis/codeNameApi\";\nimport { socket } from \"../services/socket\";\nimport { parseQueryString } from \"../const/utils\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nconst initialState = {\n  cellsMap: {}\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"selectCard\":\n      const { cellIndexes } = payload;\n      return {\n        ...state,\n        [cellIndexes]: { ...state[cellIndexes], marked: true }\n      };\n    case \"gameUpdate\":\n      const { nickname = \"\", game: updatedGame } = payload;\n      const player = updatedGame.players[nickname];\n      return {\n        ...state,\n        ...updatedGame,\n        player\n      };\n    case \"setGame\":\n      const { game } = payload || { game: initialState };\n      return { ...state, ...game };\n    case \"createGame\":\n      const { newGameId } = payload;\n      return { ...initialState, gameId: newGameId };\n    default:\n      return state;\n  }\n};\nconst notifyMe = message => {\n  // Let's check if the browser supports notifications\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n\n  // Let's check whether notification permissions have already been granted\n  else if (Notification.permission === \"granted\") {\n    // If it's okay let's create a notification\n    var notification = new Notification(message);\n  }\n\n  // Otherwise, we need to ask the user for permission\n  else if (Notification.permission !== \"denied\") {\n    Notification.requestPermission().then(function(permission) {\n      // If the user accepts, let's create a notification\n      if (permission === \"granted\") {\n        var notification = new Notification(message);\n      }\n    });\n  }\n\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n};\n\nconst singupForGameChange = (dispatch, state, nickname) => {\n  socket.on(\"gameChange\", game => {\n    console.log(\"game\", game);\n    history.push(`/code-names${game.gameId ? `?gameId=${game.gameId}` : \"\"}`);\n\n    // const message =\n    //   state.whosTurn !== game.whosTurn &&\n    //   game.whosTurn === game.players[nickname].teamColor\n    //     ? `Code Names :: It is your Team's turn`\n    //     : null;\n    // message && notifyMe(message);\n    dispatch({ type: \"gameUpdate\", payload: { game, nickname } });\n  });\n};\n\nconst handleError = error => console.log(error);\n\nexport default () => {\n  const { gameId: gameUrlId } = parseQueryString(history.location.search);\n  // const urlId = splitPath[splitPath.length - 1];\n  const [state, dispatch] = useReducer(reducer, { ...initialState });\n  const [nickname, setNickname] = useState(null);\n\n  useEffect(() => {\n    if (nickname && !state.nickname) {\n      singupForGameChange(dispatch, state, nickname);\n    }\n    (async (urlId, gameId) => {\n      if (urlId != \"games\" && gameId !== urlId) {\n        getGame(urlId);\n      }\n    })(gameUrlId, state.gameId);\n  }, [gameUrlId, state.gameId, nickname]);\n\n  const createGame = async nickname => {\n    setNickname(nickname);\n    socket.emit(\"createGame\", { nickname }, handleError);\n  };\n\n  const startGame = () => {\n    socket.emit(\"startGame\", { gameId: state.gameId }, handleError);\n  };\n\n  const getGame = async gameId => {\n    const { data: game } = await axios.get(`/games/${gameId}`);\n    dispatch({ type: \"setGame\", payload: { game } });\n  };\n\n  const setClue = (clue, numberOfWords) => {\n    const { gameId } = state;\n    debugger;\n\n    socket.emit(\"setClue\", { clue, numberOfWords, gameId });\n  };\n\n  const togglePlayerReady = nickname => {\n    const { gameId } = state;\n    socket.emit(\"togglePlayerReady\", { gameId, nickname });\n  };\n\n  const chooseTeam = async (teamColor, role = \"guesser\") => {\n    const { gameId } = state;\n    socket.emit(\"chooseTeam\", { gameId, nickname, teamColor, role });\n  };\n\n  const leaveGame = () => {\n    setNickname(\"\");\n    socket.disconnect();\n    // localStorage.removeItem(`nickname-${gameId}`);\n\n    // socket.emit(\"leaveGame\", { nickname: state.nickname, gameId });\n    // axios.post(`/games/leave/${gameId}/${state.nickname}`);\n  };\n\n  const joinGame = async (gameId, nickname) => {\n    await setNickname(nickname);\n    socket.emit(\"joinGame\", { nickname, gameId }, handleError);\n  };\n\n  const cellSelected = async cellIndexes => {\n    socket.emit(\"cellSelected\", {\n      gameId: state.gameId,\n      nickname,\n      cellIndexes\n    });\n    // dispatch({ action: \"cellSelected\", payload: { cellIndexes } });\n  };\n\n  const actions = {\n    setClue,\n    getGame,\n    joinGame,\n    chooseTeam,\n    leaveGame,\n    createGame,\n    startGame,\n    cellSelected,\n    togglePlayerReady\n  };\n\n  return {\n    state: { ...state, nickname },\n    history,\n    ...actions\n  };\n};\n","export const parseQueryString = search =>\n  search\n    .replace(\"?\", \"\")\n    .split(\"&\")\n    .map(str => str.split(\"=\"))\n    .reduce((acc, pair) => ({ ...acc, [pair[0]]: pair[1] }), {});\n","import React, { useEffect } from \"react\";\nimport axios from \"../../apis/codeNameApi\";\nimport Room from \"./Room\";\n\nimport LoginScreen from \"./LoginScreen\";\nimport useGame from \"../../hooks/useGame\";\n\nexport default () => {\n  const hook = useGame();\n  const {\n    state: { nickname, gameId }\n  } = hook;\n\n  console.log(hook.state);\n  return gameId && nickname ? <Room {...hook} /> : <LoginScreen {...hook} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport axios from \"./apis/codeNameApi\";\nimport \"./App.css\";\nimport MainScreen from \"./components/screens/MainRouter\";\n\nfunction App() {\n  return <MainScreen />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}