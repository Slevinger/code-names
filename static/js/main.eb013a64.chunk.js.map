{"version":3,"sources":["const/config.js","apis/codeNameApi.js","components/Player.js","components/PlayersList.js","components/ReadyPanel.js","components/TeamContainer.js","components/Card.js","components/Board.js","components/Settings.js","services/socket.js","components/Chat.js","components/screens/Room.js","components/Dialog.js","components/screens/LoginScreen.js","hooks/useGame.js","const/utils.js","components/screens/MainRouter.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["PROD_PATH","instance","axios","create","baseURL","board","nickname","isReady","selectedCell","className","word","style","color","PlayersList","styled","div","players","map","player","Player","Container","readyToStart","css","teamColor","toggleReady","startGame","game","areAllPlayersReady","useMemo","Object","values","filter","length","teams","teamHinterMap","keys","reduce","acc","forEach","isHinter","FormControlLabel","control","Switch","checked","disabled","onChange","label","onClick","console","log","StyeldTeamsContainer","BgTitle","title","chooseTeam","state","togglePlayerReady","leaveGame","currentPlayer","push","red","hinters","guessers","blue","ReadyPanel","StyledCard","showColor","ColorBox","ProgressBar","flipTeam","clickCount","playersCount","backgroundColor","pcnt","Math","round","indexes","card","key","Board","cellSelected","whosTurn","numberOfWords","myTeamsTurn","countSelectedCells","nick","cellIndexes","Card","Settings","Input","onValueChange","value","text","editMode","e","currentTarget","type","placeholder","setQlue","qlue","useState","currentQlue","setCurrentQlue","noOfWords","setNoOfWords","socket","openSocket","connect","Chat","Message","gameId","message","setMessage","messages","setMessages","useEffect","on","sendMessage","useCallback","emit","error","preventDefault","target","focus","class","StyleRoom","hook","joinGame","createGame","name","setNickname","Dialog","history","createBrowserHistory","initialState","cellsMap","reducer","payload","marked","updatedGame","newGameId","handleError","gameUrlId","location","search","replace","split","str","pair","useReducer","dispatch","singupForGameChange","urlId","a","getGame","get","data","role","actions","disconnect","useGame","Room","LoginScreen","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.eb013a64.chunk.js","sourcesContent":["// export const LOCAL_IP = \"192.168.0.87\";\n// export const LOCAL_IP = \"10.0.0.12\";\nexport const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://tranquil-ocean-97712.herokuapp.com/`;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { DEV_PATH, PROD_PATH } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: PROD_PATH\n});\nexport default instance;\n","import React from \"react\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\n/*\nprops = > {\n \"nickname\": \"slevinger\",\n \"isReady\": false,\n \"selectedCell\": false,\n \"isHinter\": true,\n \"teamColor\": \"blue\"\n}\n*/\n\nexport default ({ board, nickname, isReady, selectedCell, ...props }) => {\n  debugger;\n  return (\n    <div className=\"player\">\n      <div className=\"player-name\">{nickname}</div>\n      <div className=\"player-name\">{`${\n        board[selectedCell] ? `[${board[selectedCell].word}]` : \"\"\n      }`}</div>\n      {isReady && <DoneIcon style={{ color: \"green\" }} />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"./Player\";\n\nconst PlayersList = styled.div`\n  flex: 1;\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n  max-width: 300px;\n  .player {\n    flex-direction: row;\n    display: flex;\n    line-height: 1.4rem;\n    padding: 10px;\n  }\n  .player-name {\n    flex: 1;\n  }\n  h1 {\n    text-align: center;\n  }\n`;\n\nexport default ({ players, board = {} }) => {\n  return (\n    <PlayersList>\n      <h1>Players</h1>\n      {players.map(player => (\n        <Player {...player} board={board} />\n      ))}\n    </PlayersList>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { DEFAULT_ECDH_CURVE } from \"tls\";\n\nconst Container = styled.div`\n  width: 200px;\n  height: 100px;\n  border: 1px solid;\n  flex-direction: column;\n  display: flex;\n  margin: 5px;\n  text-align: center;\n  align-items: center;\n\n  button {\n    padding: 10px;\n    font-size: 20px;\n    ${({ readyToStart }) =>\n      !readyToStart &&\n      css`\n        opacity: 0.7;\n        pointer-events: none;\n      `};\n  }\n`;\n\nexport default ({\n  teamColor,\n  isReady,\n  toggleReady,\n  startGame,\n  game,\n  ...player\n}) => {\n  const areAllPlayersReady = useMemo(() => {\n    const { players } = game;\n    debugger;\n    const ready =\n      Object.values(players).filter(player => !player.isReady).length === 0;\n    return ready;\n  }, [game.players]);\n\n  const isThereHinterForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    debugger;\n    const teamHinterMap = Object.keys(teams).reduce(\n      (acc, teamColor) => ({ ...acc, [teamColor]: false }),\n      {}\n    );\n    Object.values(players).forEach(player => {\n      if (player.teamColor && player.isHinter) {\n        teamHinterMap[player.teamColor] = true;\n      }\n    });\n    return Object.values(teamHinterMap).reduce(\n      (acc, isHinter) => acc && isHinter,\n      true\n    );\n  }, [game.players, game.teams]);\n\n  const isThereGuesserForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    return Object.keys(teams).reduce((acc, teamColor) => {\n      return acc && teams[teamColor].players.length > 0;\n    }, true);\n  }, [game.players]);\n\n  const readyToStart = areAllPlayersReady; // && isThereGuesserForEachTeam && isThereHinterForEachTeam;\n  debugger;\n  // const canPlayerStartGame = useMemo(,[])\n  return (\n    <Container readyToStart={readyToStart}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={isReady}\n            disabled={!teamColor}\n            onChange={() => {\n              toggleReady(player.nickname);\n            }}\n          />\n        }\n        label=\"Ready\"\n      />\n      {\n        <button\n          onClick={() => {\n            console.log(\"start game\");\n            startGame && startGame();\n          }}\n        >\n          start\n        </button>\n      }\n    </Container>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport ReadyPanel from \"./ReadyPanel\";\n\nconst StyeldTeamsContainer = styled.div`\n  width: 60%;\n  height: 400px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: row;\n  div {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n  .red-team {\n    background-color: rgba(100, 0, 0, 0.5);\n  }\n  .blue-team {\n    background-color: rgba(0, 0, 100, 0.5);\n  }\n\n  .guesser {\n    flex: 2;\n    position: relative;\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.2);\n      cursor: pointer;\n    }\n  }\n  .hinter {\n    flex: 1;\n    position: relative;\n    background-color: rgba(0, 0, 0, 0.2);\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n      cursor: pointer;\n    }\n  }\n`;\n\nconst BgTitle = ({ title, ...props }) => {\n  return <div className=\"bg-title\">{title}</div>;\n};\n\nexport default ({\n  chooseTeam,\n  state,\n  togglePlayerReady,\n  startGame,\n  leaveGame\n}) => {\n  const { players, nickname } = state;\n  const currentPlayer = players[nickname];\n\n  const teams = useMemo(\n    () =>\n      Object.values(players)\n        .filter(({ teamColor }) => teamColor)\n        .reduce(\n          (acc, player) => {\n            acc[player.teamColor][\n              player.isHinter ? \"hinters\" : \"guessers\"\n            ].push(player.nickname);\n            return acc;\n          },\n          {\n            red: { hinters: [], guessers: [] },\n            blue: { hinters: [], guessers: [] }\n          }\n        ),\n    [players]\n  );\n  return (\n    <>\n      <StyeldTeamsContainer>\n        <div className=\"blue-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.blue.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.blue.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n        <div className=\"red-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"red\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.red.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"red\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.red.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n      </StyeldTeamsContainer>\n      <ReadyPanel\n        {...currentPlayer}\n        game={state}\n        toggleReady={togglePlayerReady}\n        startGame={startGame}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst StyledCard = styled.div`\n  background-color: ${({ showColor, color }) =>\n    showColor ? color : \"rgba(0,0,0,0.2)\"};\n  width: 18%;\n  height: 80px;\n  border-radius: 14px;\n  border: solid thin;\n  flex-direction: column;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ disabled }) => {\n    return (\n      disabled &&\n      css`\n        pointer-events: hover;\n      `\n    );\n  }}\n  &:hover {\n    cursor: pointer;\n    background-color: lightgrey;\n  }\n`;\n\nconst ColorBox = styled.div`\n  position: relative;\n  width: 60%;\n  height: 25px;\n  background-color: white;\n  border: 1px solid;\n  .word {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: relative;\n  height: 100%;\n  ${({ teamColor, flipTeam, clickCount, playersCount }) => {\n    let backgroundColor = \"white\";\n    let pcnt = 100;\n    if (flipTeam) {\n      backgroundColor = flipTeam;\n    } else {\n      if (clickCount > 0) {\n        backgroundColor = teamColor;\n        pcnt = Math.round((clickCount / playersCount) * 100);\n      }\n    }\n    return css`\n      background-color: ${backgroundColor};\n      width: ${pcnt}%;\n    `;\n  }}\n`;\n\nexport default ({ indexes, onClick, teamColor, word, ...card }) => {\n  return (\n    <StyledCard key={indexes} {...card} onClick={onClick}>\n      <ColorBox {...card}>\n        <div className={\"word\"}>{word}</div>\n        <ProgressBar teamColor={teamColor} {...card} />\n      </ColorBox>\n    </StyledCard>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Card from \"./Card\";\n\nconst Board = styled.div`\n  display: block;\n  width: 1200px;\n  height: 550px;\n  flex-wrap: wrap;\n  flex-direction: row;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default ({ state, cellSelected }) => {\n  const { board, whosTurn, teams, players, numberOfWords, player } = state;\n  if (!player || !player.nickname) {\n    return null;\n  }\n  const myTeamsTurn = whosTurn === player.teamColor;\n  const countSelectedCells = teams[state.whosTurn].players\n    .filter(nick => players[nick])\n    .map(nick => players[nick].selectedCell)\n    .reduce(\n      (acc, cellIndexes) => ({\n        ...acc,\n        [cellIndexes]: (acc[cellIndexes] || 0) + 1\n      }),\n      {}\n    );\n\n  return (\n    <div className=\"room-content\">\n      {Object.keys(state.players).length > 0 && (\n        <Board>\n          {Object.keys(board).map(key => {\n            const player = state.players[state.nickname];\n            const showColor = player.isHinter || board[key].showColor;\n            return (\n              <Card\n                indexes={key}\n                disabled={!numberOfWords && !myTeamsTurn}\n                clickCount={countSelectedCells[key] || 0}\n                playersCount={teams[state.whosTurn].players.length}\n                teamColor={whosTurn}\n                onClick={() => {\n                  debugger;\n                  whosTurn === player.teamColor && cellSelected(key);\n                }}\n                {...board[key]}\n                {...{ showColor }}\n              />\n            );\n          })}\n        </Board>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nconst Settings = styled.div`\n  text-align: center;\n  flex: 2;\n  padding-top: 10px;\n  border-left: 1px solid rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .settings-item {\n    font-size: 19px;\n  }\n  .qlue {\n    padding: 5px;\n    font-size: 18px;\n  }\n`;\nconst Input = ({ onValueChange, value, text, editMode }) => {\n  return editMode ? (\n    <input\n      value={value}\n      onChange={e => {\n        onValueChange(e.currentTarget.value);\n      }}\n      type=\"text\"\n      className=\"qlue\"\n      placeholder=\"Qlue\"\n    />\n  ) : (\n    <h2>{text}</h2>\n  );\n};\n\nconst NumberOfWords = ({ player: { isHinter }, numberOfWords }) => {\n  debugger;\n  return isHinter && !numberOfWords ? (\n    <input type=\"text\" className=\"qlue\" placeholder=\"Word Count\" />\n  ) : (\n    <h2>{numberOfWords}</h2>\n  );\n};\n\nexport default ({ state, setQlue }) => {\n  const { whosTurn, player, numberOfWords, qlue } = state;\n  const [currentQlue, setCurrentQlue] = useState(\"\");\n  const [noOfWords, setNoOfWords] = useState(0);\n  const editMode = useMemo(() => {\n    if (player && player.teamColor) {\n      return player.isHinter && whosTurn === player.teamColor && !numberOfWords;\n    }\n  }, [whosTurn, player, numberOfWords]);\n  return (\n    <Settings>\n      <div>\n        <div className=\"settings-item\">\n          Go <span style={{ color: whosTurn }}>{whosTurn}</span> team\n        </div>\n      </div>\n\n      {player && (\n        <Input\n          editMode={editMode}\n          text={qlue}\n          value={currentQlue}\n          onValueChange={setCurrentQlue}\n          {...state}\n        />\n      )}\n      {player && (\n        <Input\n          editMode={editMode}\n          text={numberOfWords}\n          value={noOfWords}\n          onValueChange={setNoOfWords}\n          {...state}\n        />\n      )}\n      {!numberOfWords && editMode && (\n        <button\n          onClick={() => {\n            setQlue(currentQlue, noOfWords);\n          }}\n        >\n          submit\n        </button>\n      )}\n    </Settings>\n  );\n};\n","import openSocket from \"socket.io-client\";\nimport { PROD_PATH, DEV_PATH } from \"../const/config\";\n\nexport const socket = openSocket(PROD_PATH);\nsocket.connect();\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { socket } from \"../services/socket\";\nimport styled from \"styled-components\";\n\nconst Chat = styled.div`\n  width: 80%;\n  max-height: 300px;\n  height: 300px;\n  overflow-y: auto;\n  margin: 10px;\n  border-style: inset;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n\n  .messages {\n    flex: 1;\n  }\n  input {\n    flex: 1;\n    padding: 5px;\n  }\n  form {\n    width: 100%;\n\n    flex-direction: row;\n    position: relative;\n    display: flex;\n    font-size: 15px;\n  }\n  .send-btn {\n    color: white;\n    background-color: blue;\n    padding: 5px;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n`;\n\nexport default ({ nickname, gameId }) => {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"message\", ({ nickname, message }) => {\n      debugger;\n      setMessages([...messages, { nickname, message }]);\n    });\n  }, [messages]);\n\n  const sendMessage = useCallback(\n    e => {\n      socket.emit(\"sendMessage\", { nickname, message, gameId }, error => {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(\"messege sent\");\n        }\n      });\n      setMessage(\"\");\n      e.preventDefault();\n    },\n    [message, nickname, gameId]\n  );\n\n  return (\n    <Chat>\n      <div className=\"messages\">\n        {messages.map(({ nickname, message }) => (\n          <Message\n            key={nickname + message}\n          >{`${nickname} : ${message}`}</Message>\n        ))}\n      </div>\n      <form className=\"messages-text\">\n        <input\n          value={message}\n          type=\"text\"\n          onChange={e => {\n            e.target.focus();\n            setMessage(e.target.value);\n          }}\n        />\n        <button onClick={sendMessage} class=\"send-btn\">\n          SEND\n        </button>\n      </form>\n    </Chat>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PlayersList from \"../PlayersList\";\nimport TeamsContainer from \"../TeamContainer\";\nimport Board from \"../Board\";\nimport Settings from \"../Settings\";\nimport Chat from \"../Chat\";\n\nconst StyleRoom = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  background-color: ${({ teamColor }) =>\n    teamColor && teamColor === \"red\"\n      ? \"rgba(200,0,0,0.2)\"\n      : teamColor && teamColor === \"blue\"\n      ? \"rgba(0,0,200,0.2)\"\n      : \"none\"};\n  .room-content {\n    align-items: center;\n    flex: 5;\n    display: flex;\n    flex-direction: column;\n    .game-title {\n      font-size: 29px;\n      width: 100%;\n      padding-left: 60px;\n      flex-direction: row;\n      display: flex;\n      padding-top: 10px;\n      .qlue {\n        padding: 5px;\n        font-size: 18px;\n      }\n    }\n  }\n`;\n\nexport default hook => {\n  const { state } = hook;\n  const { players = [], board, player } = state;\n\n  return (\n    <StyleRoom {...player}>\n      <PlayersList players={Object.values(players)} board={board} />\n      <div className=\"room-content\">\n        {board ? <Board {...hook} /> : <TeamsContainer {...hook} />}\n        <Chat nickname={hook.state.nickname} gameId={hook.state.gameId} />\n      </div>\n      <Settings {...hook} />\n    </StyleRoom>\n  );\n};\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  input {\n    padding: 10px;\n    font-size: 22px;\n  }\n  .select-method-buttons {\n    justify-content: space-around;\n    display: flex;\n    button {\n      font-size: 20px;\n      padding: 4px;\n      margin-top: 5px;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport Dialog from \"../Dialog\";\n\nexport default ({\n  joinGame,\n  createGame,\n  state: { gameId, nickname: name }\n}) => {\n  const [nickname, setNickname] = useState(name);\n\n  return (\n    <Dialog>\n      <div>\n        <div className=\"label\">Nick Name</div>\n        <input\n          type=\"text\"\n          placeholder=\"Select Nickname\"\n          value={nickname}\n          onChange={e => {\n            setNickname(e.target.value);\n          }}\n        />\n        <div className=\"select-method-buttons\">\n          <button\n            onClick={() => {\n              nickname && createGame(nickname);\n            }}\n          >\n            CREATE\n          </button>\n          <button\n            onClick={() => {\n              nickname && joinGame(gameId, nickname);\n            }}\n          >\n            JOIN\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n","import { useState, useReducer, useEffect } from \"react\";\nimport axios from \"../apis/codeNameApi\";\nimport { socket } from \"../services/socket\";\nimport { parseQueryString } from \"../const/utils\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nconst initialState = {\n  cellsMap: {}\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"selectCard\":\n      const { cellIndexes } = payload;\n      return {\n        ...state,\n        [cellIndexes]: { ...state[cellIndexes], marked: true }\n      };\n    case \"gameUpdate\":\n      const { nickname = \"\", game: updatedGame } = payload;\n      const player = updatedGame.players[nickname];\n      return {\n        ...state,\n        ...updatedGame,\n        player\n      };\n    case \"setGame\":\n      const { game } = payload || { game: initialState };\n      return { ...state, ...game };\n    case \"createGame\":\n      const { newGameId } = payload;\n      return { ...initialState, gameId: newGameId };\n    default:\n      return state;\n  }\n};\n\nconst singupForGameChange = (dispatch, nickname) => {\n  socket.on(\"gameChange\", game => {\n    console.log(\"game\", game);\n    history.push(`/code-names${game.gameId ? `?gameId=${game.gameId}` : \"\"}`);\n    console.log(history);\n    dispatch({ type: \"gameUpdate\", payload: { game, nickname } });\n  });\n};\n\nconst handleError = error => console.log(error);\n\nexport default () => {\n  const { gameId: gameUrlId } = parseQueryString(history.location.search);\n  // const urlId = splitPath[splitPath.length - 1];\n  const [state, dispatch] = useReducer(reducer, { ...initialState });\n  const [nickname, setNickname] = useState(null);\n\n  useEffect(() => {\n    if (nickname) {\n      singupForGameChange(dispatch, nickname);\n    }\n    (async (urlId, gameId) => {\n      if (urlId != \"games\" && gameId !== urlId) {\n        getGame(urlId);\n      }\n    })(gameUrlId, state.gameId);\n  }, [gameUrlId, state.gameId, nickname]);\n\n  const createGame = async nickname => {\n    setNickname(nickname);\n    socket.emit(\"createGame\", { nickname }, handleError);\n  };\n\n  const startGame = () => {\n    socket.emit(\"startGame\", { gameId: state.gameId }, handleError);\n  };\n\n  const getGame = async gameId => {\n    const { data: game } = await axios.get(`/games/${gameId}`);\n    dispatch({ type: \"setGame\", payload: { game } });\n  };\n\n  const setQlue = (qlue, numberOfWords) => {\n    const { gameId } = state;\n    debugger;\n    socket.emit(\"setQlue\", { qlue, numberOfWords, gameId });\n  };\n\n  const togglePlayerReady = nickname => {\n    const { gameId } = state;\n    socket.emit(\"togglePlayerReady\", { gameId, nickname });\n  };\n\n  const chooseTeam = async (teamColor, role = \"guesser\") => {\n    const { gameId } = state;\n    socket.emit(\"chooseTeam\", { gameId, nickname, teamColor, role });\n  };\n\n  const leaveGame = () => {\n    setNickname(\"\");\n    socket.disconnect();\n    // localStorage.removeItem(`nickname-${gameId}`);\n\n    // socket.emit(\"leaveGame\", { nickname: state.nickname, gameId });\n    // axios.post(`/games/leave/${gameId}/${state.nickname}`);\n  };\n\n  const joinGame = async (gameId, nickname) => {\n    await setNickname(nickname);\n    socket.emit(\"joinGame\", { nickname, gameId }, handleError);\n  };\n\n  const cellSelected = async cellIndexes => {\n    socket.emit(\"cellSelected\", {\n      gameId: state.gameId,\n      nickname,\n      cellIndexes\n    });\n    // dispatch({ action: \"cellSelected\", payload: { cellIndexes } });\n  };\n\n  const actions = {\n    setQlue,\n    getGame,\n    joinGame,\n    chooseTeam,\n    leaveGame,\n    createGame,\n    startGame,\n    cellSelected,\n    togglePlayerReady\n  };\n\n  return {\n    state: { ...state, nickname },\n    history,\n    ...actions\n  };\n};\n","export const parseQueryString = search =>\n  search\n    .replace(\"?\", \"\")\n    .split(\"&\")\n    .map(str => str.split(\"=\"))\n    .reduce((acc, pair) => ({ ...acc, [pair[0]]: pair[1] }), {});\n","import React, { useEffect } from \"react\";\nimport axios from \"../../apis/codeNameApi\";\nimport Room from \"./Room\";\n\nimport LoginScreen from \"./LoginScreen\";\nimport useGame from \"../../hooks/useGame\";\n\nexport default () => {\n  const hook = useGame();\n  const {\n    state: { nickname, gameId }\n  } = hook;\n\n  console.log(hook.state);\n  return gameId && nickname ? <Room {...hook} /> : <LoginScreen {...hook} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport axios from \"./apis/codeNameApi\";\nimport \"./App.css\";\nimport MainScreen from \"./components/screens/MainRouter\";\n\nfunction App() {\n  return <MainScreen />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}