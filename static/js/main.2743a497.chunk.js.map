{"version":3,"sources":["const/config.js","apis/codeNameApi.js","components/Player.js","components/PlayersList.js","components/ReadyPanel.js","components/TeamContainer.js","components/Card.js","components/Board.js","components/common/StyledComponents.js","services/socket.js","components/Chat.js","components/Settings.js","components/screens/Room.js","components/Dialog.js","components/screens/LoginScreen.js","hooks/useGame.js","const/utils.js","components/screens/MainRouter.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["PROD_PATH","instance","axios","create","baseURL","board","nickname","isReady","selectedCell","teamColor","className","style","color","word","PlayersList","styled","div","players","map","player","Player","Container","readyToStart","css","toggleReady","startGame","game","areAllPlayersReady","useMemo","Object","values","filter","length","teams","teamHinterMap","keys","reduce","acc","forEach","isHinter","FormControlLabel","control","Switch","checked","disabled","onChange","label","onClick","console","log","StyeldTeamsContainer","BgTitle","title","chooseTeam","state","togglePlayerReady","leaveGame","currentPlayer","push","red","hinters","guessers","blue","ReadyPanel","StyledCard","showColor","ColorBox","ProgressBar","flipTeam","clickCount","playersCount","backgroundColor","pcnt","Math","round","indexes","card","key","Board","cellSelected","whosTurn","numberOfWords","myTeamsTurn","countSelectedCells","nick","cellIndexes","Card","Button","bgColor","socket","openSocket","connect","Chat","Message","messagesReducer","type","payload","message","gameId","useReducer","messages","dispatch","useState","setMessage","subscribedForMessages","setSubscribedForMessages","bottomRef","useRef","useEffect","on","current","scrollIntoView","behavior","sendMessage","useCallback","e","emit","error","preventDefault","ref","value","target","focus","class","Settings","Input","onValueChange","text","editMode","currentTarget","placeholder","setClue","clue","currentClue","setCurrentClue","noOfWords","setNoOfWords","StyleRoom","hook","joinGame","createGame","name","setNickname","Dialog","history","createBrowserHistory","initialState","cellsMap","reducer","marked","updatedGame","newGameId","handleError","gameUrlId","location","search","replace","split","str","pair","singupForGameChange","urlId","a","getGame","get","data","role","actions","disconnect","useGame","Room","LoginScreen","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.2743a497.chunk.js","sourcesContent":["// export const LOCAL_IP = \"192.168.0.87\";\n// export const LOCAL_IP = \"10.0.0.12\";\nexport const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://tranquil-ocean-97712.herokuapp.com/`;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { DEV_PATH, PROD_PATH } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: PROD_PATH\n});\nexport default instance;\n","import React from \"react\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n/*\nprops = > {\n \"nickname\": \"slevinger\",\n \"isReady\": false,\n \"selectedCell\": false,\n \"isHinter\": true,\n \"teamColor\": \"blue\"\n}\n*/\n\nexport default ({\n  board,\n  nickname,\n  isReady,\n  selectedCell,\n  teamColor,\n  ...props\n}) => {\n  debugger;\n  return (\n    <div className=\"player\">\n      <FiberManualRecordIcon style={{ color: teamColor }} />\n      <div className=\"player-name\">{nickname}</div>\n      <div className=\"player-name\">{`${\n        board[selectedCell] ? `[${board[selectedCell].word}]` : \"\"\n      }`}</div>\n      {isReady && <DoneIcon style={{ color: \"green\" }} />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"./Player\";\n\nconst PlayersList = styled.div`\n  flex: 1;\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n  max-width: 300px;\n  .player {\n    flex-direction: row;\n    display: flex;\n    line-height: 1.4rem;\n    padding: 10px;\n  }\n  .player-name {\n    flex: 1;\n    margin-left: 10px;\n    line-height: 24px;\n  }\n  h1 {\n    text-align: center;\n  }\n`;\n\nexport default ({ players, board = {} }) => {\n  return (\n    <PlayersList>\n      <h1>Players</h1>\n      {players.map(player => (\n        <Player {...player} board={board} />\n      ))}\n    </PlayersList>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { DEFAULT_ECDH_CURVE } from \"tls\";\n\nconst Container = styled.div`\n  width: 200px;\n  height: 100px;\n  border: 1px solid;\n  flex-direction: column;\n  display: flex;\n  margin: 5px;\n  text-align: center;\n  align-items: center;\n\n  button {\n    padding: 10px;\n    font-size: 20px;\n    ${({ readyToStart }) =>\n      !readyToStart &&\n      css`\n        opacity: 0.7;\n        pointer-events: none;\n      `};\n  }\n`;\n\nexport default ({\n  teamColor,\n  isReady,\n  toggleReady,\n  startGame,\n  game,\n  ...player\n}) => {\n  const areAllPlayersReady = useMemo(() => {\n    const { players } = game;\n    debugger;\n    const ready =\n      Object.values(players).filter(player => !player.isReady).length === 0;\n    return ready;\n  }, [game.players]);\n\n  const isThereHinterForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    debugger;\n    const teamHinterMap = Object.keys(teams).reduce(\n      (acc, teamColor) => ({ ...acc, [teamColor]: false }),\n      {}\n    );\n    Object.values(players).forEach(player => {\n      if (player.teamColor && player.isHinter) {\n        teamHinterMap[player.teamColor] = true;\n      }\n    });\n    return Object.values(teamHinterMap).reduce(\n      (acc, isHinter) => acc && isHinter,\n      true\n    );\n  }, [game.players, game.teams]);\n\n  const isThereGuesserForEachTeam = useMemo(() => {\n    const { players, teams } = game;\n    return Object.keys(teams).reduce((acc, teamColor) => {\n      return acc && teams[teamColor].players.length > 0;\n    }, true);\n  }, [game.players]);\n\n  const readyToStart = areAllPlayersReady; // && isThereGuesserForEachTeam && isThereHinterForEachTeam;\n  debugger;\n  // const canPlayerStartGame = useMemo(,[])\n  return (\n    <Container readyToStart={readyToStart}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={isReady}\n            disabled={!teamColor}\n            onChange={() => {\n              toggleReady(player.nickname);\n            }}\n          />\n        }\n        label=\"Ready\"\n      />\n      {\n        <button\n          onClick={() => {\n            console.log(\"start game\");\n            startGame && startGame();\n          }}\n        >\n          start\n        </button>\n      }\n    </Container>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport ReadyPanel from \"./ReadyPanel\";\n\nconst StyeldTeamsContainer = styled.div`\n  width: 60%;\n  height: 400px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: row;\n  div {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n  .red-team {\n    background-color: rgba(100, 0, 0, 0.5);\n  }\n  .blue-team {\n    background-color: rgba(0, 0, 100, 0.5);\n  }\n\n  .guesser {\n    flex: 2;\n    position: relative;\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.2);\n      cursor: pointer;\n    }\n  }\n  .hinter {\n    flex: 1;\n    position: relative;\n    background-color: rgba(0, 0, 0, 0.2);\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n      cursor: pointer;\n    }\n  }\n`;\n\nconst BgTitle = ({ title, ...props }) => {\n  return <div className=\"bg-title\">{title}</div>;\n};\n\nexport default ({\n  chooseTeam,\n  state,\n  togglePlayerReady,\n  startGame,\n  leaveGame\n}) => {\n  const { players, nickname } = state;\n  const currentPlayer = players[nickname];\n\n  const teams = useMemo(\n    () =>\n      Object.values(players)\n        .filter(({ teamColor }) => teamColor)\n        .reduce(\n          (acc, player) => {\n            acc[player.teamColor][\n              player.isHinter ? \"hinters\" : \"guessers\"\n            ].push(player.nickname);\n            return acc;\n          },\n          {\n            red: { hinters: [], guessers: [] },\n            blue: { hinters: [], guessers: [] }\n          }\n        ),\n    [players]\n  );\n  return (\n    <>\n      <StyeldTeamsContainer>\n        <div className=\"blue-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.blue.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"blue\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.blue.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n        <div className=\"red-team\">\n          <div\n            className=\"guesser\"\n            onClick={() => {\n              chooseTeam(\"red\", \"guesser\");\n            }}\n          >\n            <BgTitle title={\"GUESSERS\"} />\n            {teams.red.guessers.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n          <div\n            className=\"hinter\"\n            onClick={() => {\n              chooseTeam(\"red\", \"hinter\");\n            }}\n          >\n            <BgTitle title={\"HINTERS\"} />\n            {teams.red.hinters.map(nickname => (\n              <div>{nickname}</div>\n            ))}\n          </div>\n        </div>\n      </StyeldTeamsContainer>\n      <ReadyPanel\n        {...currentPlayer}\n        game={state}\n        toggleReady={togglePlayerReady}\n        startGame={startGame}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst StyledCard = styled.div`\n  background-color: ${({ showColor, color }) =>\n    showColor ? color : \"rgba(0,0,0,0.2)\"};\n  width: 17%;\n  height: 80px;\n  border-radius: 14px;\n  border: solid thin;\n  flex-direction: column;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ disabled }) => {\n    return (\n      disabled &&\n      css`\n        pointer-events: hover;\n      `\n    );\n  }}\n  &:hover {\n    cursor: pointer;\n    background-color: lightgrey;\n  }\n`;\n\nconst ColorBox = styled.div`\n  position: relative;\n  width: 60%;\n  height: 25px;\n  background-color: white;\n  border: 1px solid;\n  .word {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: relative;\n  height: 100%;\n  ${({ teamColor, flipTeam, clickCount, playersCount }) => {\n    let backgroundColor = \"white\";\n    let pcnt = 100;\n    if (flipTeam) {\n      backgroundColor = flipTeam;\n    } else {\n      if (clickCount > 0) {\n        backgroundColor = teamColor;\n        pcnt = Math.round((clickCount / playersCount) * 100);\n      }\n    }\n    return css`\n      background-color: ${backgroundColor};\n      width: ${pcnt}%;\n    `;\n  }}\n`;\n\nexport default ({ indexes, onClick, teamColor, word, ...card }) => {\n  return (\n    <StyledCard key={indexes} {...card} onClick={onClick}>\n      <ColorBox {...card}>\n        <div className={\"word\"}>{word}</div>\n        <ProgressBar teamColor={teamColor} {...card} />\n      </ColorBox>\n    </StyledCard>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Card from \"./Card\";\n\nconst Board = styled.div`\n  display: block;\n  width: 900px;\n  height: 550px;\n  flex-wrap: wrap;\n  flex-direction: row;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default ({ state, cellSelected }) => {\n  const { board, whosTurn, teams, players, numberOfWords, player } = state;\n  if (!player || !player.nickname) {\n    return null;\n  }\n  const myTeamsTurn = whosTurn === player.teamColor;\n  const countSelectedCells = teams[state.whosTurn].players\n    .filter(nick => players[nick])\n    .map(nick => players[nick].selectedCell)\n    .reduce(\n      (acc, cellIndexes) => ({\n        ...acc,\n        [cellIndexes]: (acc[cellIndexes] || 0) + 1\n      }),\n      {}\n    );\n\n  return (\n    <div className=\"room-content\">\n      {Object.keys(state.players).length > 0 && (\n        <Board>\n          {Object.keys(board).map(key => {\n            const player = state.players[state.nickname];\n            const showColor = player.isHinter || board[key].showColor;\n            return (\n              <Card\n                indexes={key}\n                disabled={!numberOfWords && !myTeamsTurn}\n                clickCount={countSelectedCells[key] || 0}\n                playersCount={teams[state.whosTurn].players.length}\n                teamColor={whosTurn}\n                onClick={() => {\n                  debugger;\n                  whosTurn === player.teamColor && cellSelected(key);\n                }}\n                {...board[key]}\n                {...{ showColor }}\n              />\n            );\n          })}\n        </Board>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Button = styled.div`\n  height: 30px;\n  background-color: ${({ bgColor }) => bgColor || \"#2f78b9\"};\n  border: solid thin;\n  color: ${({ color }) => color || \"white\"};\n  padding: 5px 20px;\n  display: inline-flex;\n  align-items: center;\n  border: none;\n  margin: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 7px;\n  box-shadow: 1px 2px 5px black;\n  ${({ style }) =>\n    css`\n      ${style}\n    `}\n  &:hover {\n    cursor: pointer;\n    transform: translateY(-4px);\n    box-shadow: 1px 2px 9px black;\n  }\n`;\n","import openSocket from \"socket.io-client\";\nimport { PROD_PATH, DEV_PATH } from \"../const/config\";\n\nexport const socket = openSocket(PROD_PATH);\nsocket.connect();\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n  useRef,\n  useReducer\n} from \"react\";\nimport { socket } from \"../services/socket\";\nimport styled from \"styled-components\";\n\nconst Chat = styled.div`\n  width: 80%;\n  max-height: 300px;\n  height: 300px;\n  overflow-y: hidden;\n  margin: 10px;\n  border-style: inset;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n\n  .messages {\n    flex: 1;\n    overflow-y: scroll;\n  }\n  input {\n    flex: 1;\n    padding: 5px;\n  }\n  form {\n    width: 100%;\n\n    flex-direction: row;\n    position: relative;\n    display: flex;\n    font-size: 15px;\n  }\n  .send-btn {\n    color: white;\n    background-color: blue;\n    padding: 5px;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n`;\n\nconst messages = [];\n\nconst messagesReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"add_message\":\n      const { nickname, message } = payload;\n      return [...state, { nickname, message }];\n    default:\n      return state;\n  }\n};\n\nexport default ({ nickname, gameId }) => {\n  const [messages, dispatch] = useReducer(messagesReducer, []);\n  const [message, setMessage] = useState(\"\");\n  const [subscribedForMessages, setSubscribedForMessages] = useState(false);\n  const bottomRef = useRef(null);\n\n  useEffect(() => {\n    if (!subscribedForMessages) {\n      socket.on(\"message\", ({ nickname, message }) => {\n        debugger;\n        dispatch({ type: \"add_message\", payload: { nickname, message } });\n        // setMessages([...messages]);\n      });\n      setSubscribedForMessages(true);\n    }\n  }, [dispatch, messages]);\n\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = useCallback(\n    e => {\n      socket.emit(\"sendMessage\", { nickname, message, gameId }, error => {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(\"messege sent\");\n        }\n      });\n      setMessage(\"\");\n      e.preventDefault();\n    },\n    [message, nickname, gameId]\n  );\n\n  return (\n    <Chat>\n      <div className=\"messages\">\n        {messages.map(({ nickname, message }) => (\n          <Message\n            key={nickname + message}\n          >{`${nickname} : ${message}`}</Message>\n        ))}\n        <div ref={bottomRef} />\n      </div>\n      <div>\n        <form className=\"messages-text\">\n          <input\n            value={message}\n            type=\"text\"\n            onChange={e => {\n              e.target.focus();\n              setMessage(e.target.value);\n            }}\n          />\n          <button onClick={sendMessage} class=\"send-btn\">\n            SEND\n          </button>\n        </form>\n      </div>\n    </Chat>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./common/StyledComponents\";\nimport Chat from \"./Chat\";\n\nconst Settings = styled.div`\n  text-align: center;\n  flex: 2;\n  padding-top: 10px;\n  border-left: 1px solid rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .settings-item {\n    font-size: 19px;\n  }\n  .clue {\n    padding: 5px;\n    font-size: 18px;\n  }\n`;\nconst Input = ({ onValueChange, value, text, editMode }) => {\n  return editMode ? (\n    <input\n      value={value}\n      onChange={e => {\n        onValueChange(e.currentTarget.value);\n      }}\n      type=\"text\"\n      className=\"clue\"\n      placeholder=\"Clue\"\n    />\n  ) : (\n    <h2>{text}</h2>\n  );\n};\n\nexport default ({ state, setClue, chooseTeam }) => {\n  const { whosTurn, player, numberOfWords, clue } = state;\n  const [currentClue, setCurrentClue] = useState(\"\");\n  const [noOfWords, setNoOfWords] = useState(0);\n  const editMode = useMemo(() => {\n    if (player && player.teamColor) {\n      return player.isHinter && whosTurn === player.teamColor && !numberOfWords;\n    }\n  }, [whosTurn, player, numberOfWords]);\n  return (\n    <Settings>\n      <div>\n        <div className=\"settings-item\">\n          Go <span style={{ color: whosTurn }}>{whosTurn}</span> team\n        </div>\n      </div>\n\n      <div>\n        <Button\n          onClick={() => {\n            chooseTeam(\"red\", player.isHinter ? \"hinter\" : \"guesser\");\n          }}\n          bgColor={\"rgba(244,100,100,0.4)\"}\n        >\n          Join Red Team\n        </Button>\n        <Button\n          onClick={() => {\n            chooseTeam(\"blue\", player.isHinter ? \"hinter\" : \"guesser\");\n          }}\n          bgColor={\"rgba(100,100,244,0.4)\"}\n        >\n          Join Blue Team\n        </Button>\n      </div>\n\n      {player && (\n        <Input\n          editMode={editMode}\n          text={clue}\n          value={currentClue}\n          onValueChange={setCurrentClue}\n          {...state}\n        />\n      )}\n      {player && (\n        <Input\n          editMode={editMode}\n          text={numberOfWords}\n          value={noOfWords}\n          onValueChange={setNoOfWords}\n          {...state}\n        />\n      )}\n      {!numberOfWords && editMode && (\n        <button\n          onClick={() => {\n            setClue(currentClue, noOfWords);\n          }}\n        >\n          submit\n        </button>\n      )}\n      <Chat nickname={state.nickname} gameId={state.gameId} />\n    </Settings>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PlayersList from \"../PlayersList\";\nimport TeamsContainer from \"../TeamContainer\";\nimport Board from \"../Board\";\nimport Settings from \"../Settings\";\nimport Chat from \"../Chat\";\n\nconst StyleRoom = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${({ teamColor }) =>\n    teamColor && teamColor === \"red\"\n      ? \"rgba(200,0,0,0.2)\"\n      : teamColor && teamColor === \"blue\"\n      ? \"rgba(0,0,200,0.2)\"\n      : \"none\"};\n  .room-content {\n    align-items: center;\n    flex: 5;\n    display: flex;\n    flex-direction: column;\n    .game-title {\n      font-size: 29px;\n      width: 100%;\n      padding-left: 60px;\n      flex-direction: row;\n      display: flex;\n      padding-top: 10px;\n      .clue {\n        padding: 5px;\n        font-size: 18px;\n      }\n    }\n  }\n`;\n\nexport default hook => {\n  const { state } = hook;\n  const { players = [], board, player } = state;\n\n  return (\n    <StyleRoom {...player}>\n      <PlayersList players={Object.values(players)} board={board} />\n      <div className=\"room-content\">\n        {board ? <Board {...hook} /> : <TeamsContainer {...hook} />}\n      </div>\n      <Settings {...hook} />\n    </StyleRoom>\n  );\n};\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  input {\n    padding: 10px;\n    font-size: 22px;\n  }\n  .select-method-buttons {\n    justify-content: space-around;\n    display: flex;\n    button {\n      font-size: 20px;\n      padding: 4px;\n      margin-top: 5px;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport Dialog from \"../Dialog\";\n\nexport default ({\n  joinGame,\n  createGame,\n  state: { gameId, nickname: name }\n}) => {\n  const [nickname, setNickname] = useState(name);\n\n  return (\n    <Dialog>\n      <div>\n        <div className=\"label\">Nick Name</div>\n        <input\n          type=\"text\"\n          placeholder=\"Select Nickname\"\n          value={nickname}\n          onChange={e => {\n            setNickname(e.target.value);\n          }}\n        />\n        <div className=\"select-method-buttons\">\n          <button\n            onClick={() => {\n              nickname && createGame(nickname);\n            }}\n          >\n            CREATE\n          </button>\n          <button\n            onClick={() => {\n              nickname && joinGame(gameId, nickname);\n            }}\n          >\n            JOIN\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n","import { useState, useReducer, useEffect } from \"react\";\nimport axios from \"../apis/codeNameApi\";\nimport { socket } from \"../services/socket\";\nimport { parseQueryString } from \"../const/utils\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\nconst initialState = {\n  cellsMap: {}\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"selectCard\":\n      const { cellIndexes } = payload;\n      return {\n        ...state,\n        [cellIndexes]: { ...state[cellIndexes], marked: true }\n      };\n    case \"gameUpdate\":\n      const { nickname = \"\", game: updatedGame } = payload;\n      const player = updatedGame.players[nickname];\n      return {\n        ...state,\n        ...updatedGame,\n        player\n      };\n    case \"setGame\":\n      const { game } = payload || { game: initialState };\n      return { ...state, ...game };\n    case \"createGame\":\n      const { newGameId } = payload;\n      return { ...initialState, gameId: newGameId };\n    default:\n      return state;\n  }\n};\n\nconst singupForGameChange = (dispatch, nickname) => {\n  socket.on(\"gameChange\", game => {\n    console.log(\"game\", game);\n    history.push(`/code-names${game.gameId ? `?gameId=${game.gameId}` : \"\"}`);\n    console.log(history);\n    dispatch({ type: \"gameUpdate\", payload: { game, nickname } });\n  });\n};\n\nconst handleError = error => console.log(error);\n\nexport default () => {\n  const { gameId: gameUrlId } = parseQueryString(history.location.search);\n  // const urlId = splitPath[splitPath.length - 1];\n  const [state, dispatch] = useReducer(reducer, { ...initialState });\n  const [nickname, setNickname] = useState(null);\n\n  useEffect(() => {\n    if (nickname) {\n      singupForGameChange(dispatch, nickname);\n    }\n    (async (urlId, gameId) => {\n      if (urlId != \"games\" && gameId !== urlId) {\n        getGame(urlId);\n      }\n    })(gameUrlId, state.gameId);\n  }, [gameUrlId, state.gameId, nickname]);\n\n  const createGame = async nickname => {\n    setNickname(nickname);\n    socket.emit(\"createGame\", { nickname }, handleError);\n  };\n\n  const startGame = () => {\n    socket.emit(\"startGame\", { gameId: state.gameId }, handleError);\n  };\n\n  const getGame = async gameId => {\n    const { data: game } = await axios.get(`/games/${gameId}`);\n    dispatch({ type: \"setGame\", payload: { game } });\n  };\n\n  const setClue = (clue, numberOfWords) => {\n    const { gameId } = state;\n    debugger;\n    socket.emit(\"setClue\", {  clue, numberOfWords, gameId });\n  };\n\n  const togglePlayerReady = nickname => {\n    const { gameId } = state;\n    socket.emit(\"togglePlayerReady\", { gameId, nickname });\n  };\n\n  const chooseTeam = async (teamColor, role = \"guesser\") => {\n    const { gameId } = state;\n    socket.emit(\"chooseTeam\", { gameId, nickname, teamColor, role });\n  };\n\n  const leaveGame = () => {\n    setNickname(\"\");\n    socket.disconnect();\n    // localStorage.removeItem(`nickname-${gameId}`);\n\n    // socket.emit(\"leaveGame\", { nickname: state.nickname, gameId });\n    // axios.post(`/games/leave/${gameId}/${state.nickname}`);\n  };\n\n  const joinGame = async (gameId, nickname) => {\n    await setNickname(nickname);\n    socket.emit(\"joinGame\", { nickname, gameId }, handleError);\n  };\n\n  const cellSelected = async cellIndexes => {\n    socket.emit(\"cellSelected\", {\n      gameId: state.gameId,\n      nickname,\n      cellIndexes\n    });\n    // dispatch({ action: \"cellSelected\", payload: { cellIndexes } });\n  };\n\n  const actions = {\n    setClue,\n    getGame,\n    joinGame,\n    chooseTeam,\n    leaveGame,\n    createGame,\n    startGame,\n    cellSelected,\n    togglePlayerReady\n  };\n\n  return {\n    state: { ...state, nickname },\n    history,\n    ...actions\n  };\n};\n","export const parseQueryString = search =>\n  search\n    .replace(\"?\", \"\")\n    .split(\"&\")\n    .map(str => str.split(\"=\"))\n    .reduce((acc, pair) => ({ ...acc, [pair[0]]: pair[1] }), {});\n","import React, { useEffect } from \"react\";\nimport axios from \"../../apis/codeNameApi\";\nimport Room from \"./Room\";\n\nimport LoginScreen from \"./LoginScreen\";\nimport useGame from \"../../hooks/useGame\";\n\nexport default () => {\n  const hook = useGame();\n  const {\n    state: { nickname, gameId }\n  } = hook;\n\n  console.log(hook.state);\n  return gameId && nickname ? <Room {...hook} /> : <LoginScreen {...hook} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport axios from \"./apis/codeNameApi\";\nimport \"./App.css\";\nimport MainScreen from \"./components/screens/MainRouter\";\n\nfunction App() {\n  return <MainScreen />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}